plugins {
    id 'java'
    id 'application'
    id "com.github.breadmoirai.github-release" version "2.2.12"
}

group 'com.clouds42'
version '1.1-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations {
    providedCompile
}

dependencies {
    def output = new ByteArrayOutputStream()
    def edtLocation = System.getenv('EDT_LOCATION')
    if (edtLocation == null) {
        exec {
            commandLine 'powershell', 'ring', 'edt', 'locations', 'list'
            standardOutput = output
        }
        edtLocation = output.toString().trim().split("\n")[0].trim() + '/plugins/'
    }
    println 'EDT location: ' + edtLocation
    compile group: 'info.picocli', name: 'picocli', version: '4.2.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.2.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha1'
    compile group: 'org.scala-sbt.ipcsocket', name: 'ipcsocket', version: '1.0.0'
    implementation 'com.github.proDOOMman:mdclasses:676043538506e56870059b10e672e8f77e4ee195'
    implementation 'com.github.proDOOMman:bsl-language-server:c3144f4e4edb66d67769405850c2ef407e446710'
    implementation 'com.github.1c-syntax:utils:0.2.1'
    providedCompile fileTree(edtLocation) { include '*.jar' }
}

compileJava {
    sourceSets.main.compileClasspath += configurations.providedCompile
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

run {
    classpath += configurations.providedCompile
}

startScripts {
  unixStartScriptGenerator.template = resources.text.fromFile(project.getRootDir().getAbsolutePath() + '/scripts/unixStartScript.txt')
  windowsStartScriptGenerator.template = resources.text.fromFile(project.getRootDir().getAbsolutePath() + '/scripts/windowsStartScript.txt')
}

application {
    mainClassName = 'com.clouds42.Coverage41C'
}

githubRelease {
    token findProperty('github.token')
    owner "proDOOMman"
    repo "Coverage41C"
    targetCommitish "master"
    releaseAssets.from(distZip.archiveFile)
    dryRun true
}
